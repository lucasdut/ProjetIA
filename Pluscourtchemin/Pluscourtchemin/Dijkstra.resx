<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAWQAAABxCAYAAADid9m8AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADr4AAA6+AepCscAAABpeSURBVHhe7Z0J1FTjH8frLwclkVCiRSjaLWmjhRTtUkjR
        LktCCyplLYUWFe1RqUhKZTmUVkuopBRRoYVW+5bl+Z/P03MzjZk7d96ZuXOX3+ece3rnzlTzztz7fX7P
        b82lBEEQBE8ggiwIguARRJAFQRA8ggiyIAiCRxBBFgRB8AgiyIIgCB5BBFkQBMEjiCALgiB4BBFkQRAE
        jyCCLAiC4BFEkAVBEDyCCLIgCIJHEEEWBEHwCK4K8ubNm9XixYvVzz//bM4I2WDdunVq/vz5asGCBWrp
        0qVq9+7d5hnBbX7//Xe1ZMkSNW/evEPHu+++a54VwoZrgvzbb7+p+vXrqyOPPFI9++yz5qzgNghA3bp1
        VdGiRdV5552nzjjjDJU3b1513XXXqR07dphXCW7x0UcfqcKFC6syZcqo888/Xx8dOnQwzwphwzVBfv/9
        91XFihVV48aNVZMmTdQff/xhnhHchIWxTp06qm/fvuaM0lby2WefrZo2bSq7F5dZvXq1XhT5DgTBNUHu
        37+/atmypXrttdf0Bbh27VrzjOAmsQQZZs2apQoVKqQWLVpkzniLNWvWHLatX7hwof5d/I4IshCJK4K8
        b98+ddFFF6lp06ap/fv3qwsuuEANGTLEPCu4STxB/vLLL1Xx4sXVk08+ac54hx9//FHVqFFDlSpV6tC2
        vkGDBuqrr74yr/AvCDKf+6hRo3R8hePzzz83zwphwxVBxiouX768vukBa5kbjBvNj+BrJSBmWWsEyPzi
        f40nyN98840699xz1aOPPmrOeAeuk5o1a6qZM2eaM8EBQT755JO1KJcuXVofvXv3Ns8KYcMVQe7UqZO2
        bm6//XbVvXt31aJFC3XCCSf4dpv24IMPqoIFCx6y1rD4X375ZfOst4knyFhlBPqeeeYZc8Y7BF2QxWUh
        WGRckLGKiSATOUbIOO699151yimn6EASYla7dm318MMPq127dpm/5W3uv/9+dc0115hH/iKeIOOqQJC9
        6NtHkKtXr66zQ9q3b6+vFVIog4AIshBJxgWZFDe2YZa74rnnntPWJdkWbPfJvnjjjTdU586dtdX80EMP
        6dd5mSAIcq9evdR3332nhW3QoEHqpJNOUv369VN//fWXeaV34D09//zzetHApcL7Z/EIQr6uCLIQSUYF
        +e+//1atWrXS1jE/E9Q79dRTdWFCLPBjlitXTvuYvQyCfOaZZ6obbrhB9ezZU2cm8Pv5AdINWQxz5cql
        cufOrY477jhtfU6ePFn9+eef5lXeZu/evdpV1K1bN3PGv7AjwWB5++23zRkhzLjiQ4adO3dqC/iTTz4x
        Z2JD1VjJkiU9bTF8+OGHatiwYWr48OGqXbt26vjjj9dWpuAOVnFLmzZtzBlBCAauCTJW7y233GIe2TNy
        5Eids+wX7r77blWhQgXzSEg327dvP2whJ6uFndbUqVPNGUEIBq4JMlt8ykSdQBAnX7586tdff9V+zo4d
        O2rRI3d50qRJOqOBLd5nn32mt6///POP+ZvZAWuZLBK/cODAATV9+nR10003aSuTzJfly5ebZ73HsmXL
        dHkxfuNixYrpHQkLPJayl2AXSMCRXRPHI488os8JglNcE+T8+fMnlXfMzYdl9NNPP6lx48apgQMHqh49
        eqgbb7xRNWzYUFWtWlWLPG6QPHny6CozfHHkN1Oajd+afM7BgweriRMnahFfsWKF+vTTT9WePXty7PP9
        5Zdf1MqVKw+VflOcUK1aNd9sn0lrw7pky08xwpQpU7S7hc+uUqVK2h3jRfjceW8EgVmkvQSGA/EEgtU3
        33yzNho4+Jnrk2uWYKogJMI1QSaK/+2335pHieHixvp1AlF4UuY2bNigrak5c+ao8ePHa6Eh6Ia1QiAL
        4TzrrLP0v42In3jiiTr1jqAWz5NSRfYBkfwJEyaouXPnastx48aN2reNiFN1SJSffwOrmIWGBcLKIvEy
        Y8aM0QUIsXYq7DLIgCEd0aui7EUQ48suu0xdf/316ocffjBn/4VzrVu3VvXq1RNRFhLimiAjeFiqTnjn
        nXe09ZtJVwQijsgitogu4osII8aIMuKMpY1YI9qINyKOEPPesCaxxvF1Y7kj/iwCLAYsCiwO/PteSSMj
        RQzLOFH+LqmIiDJCIySGuAid8ux2XDx37bXXqttuu82cEYTYuCbIr7/+uhYxJyLLxYtf1mtwY2G14/bA
        /YEbhEUG3zbuEdwkdExDqCmGwY2CiLNtRcRxszRq1EhvYS0Rxx3z0ksv6awSAldY+plIP0M0nH6mWPxO
        F88wg+uE79ZJQRMpnbz2+++/N2cE4b+4JsgIca1atVSXLl1sRXno0KFavIJy4VpuDgKQBCKxQPEvPvbY
        YzpQScCyWbNmujT4nHPO0a4dRJzAFS4RmjIhkPgo77rrLu1LHzt2rJo9e7ZubL5+/XrtCrITcbbNBQoU
        cPyZvvLKK6py5cq6+EWO+AcVpyx0TiEnnwVYEOLhmiADAbqLL75YC9AHH3xgzh5k06ZNOgiCGG/bts2c
        DScsWHTF4zPB1UCaF4Ubjz/+uLrnnnt0VWPz5s31Z0lDIJrT0Pgf0UXEq1Spoq688krVtm1bdeedd+q/
        i9vFKV9//bUqUqSImjFjhhw2By4IFkinUIUaXbIuCJG4KshAA3SsQ4o/sAiJ9jO5AlHB4oi1/cNFQMc4
        IT6IOFtomgS99957uhsdGRVPPPGErpCkPNcpW7ZsUSVKlDCPhHhQak5vFqcMGDBAH4IQD9cF2YKt/KpV
        q3TZMQJil1PK8wg4PlrxwSUP0X2Ckk77ByPkuEkEe+ivcemll5pHiSE754UXXjCPBOG/ZE2QLUicdzLO
        CXcHEe3TTz9drOUccMcdd2h3hxPowIeFLdhDgQ0FK2TUJIKALVku/B1BiEfWBRmrgW5vTnnrrbe0tUxa
        mljLziHdjYDhm2++ac7EhsZJzD60S+MS/gX3GwuYXbEK8QDccriPJJ1QsCPrgoyFQUVeMkRay6+++qo5
        KySCVD1EmSyN6CIFMjUYIFC2bFnf9KX2CmS/ILjkz0dDZg0ZKxQoYR1TEUkKqCDEIquCjFVB+8ecItZy
        8lCFh38YYSYLg4WN3GlyZOltIWLsnC+++ML8pNTo0aN1hhDiy+dIeic/Uxn69NNPm1cdLHoigC2iLMQi
        q4LMxUmKViqItZwzEBPyoelnQaMhWdCSg7xyFrWtW7eaMwczXZiGTYk6BwHrWDn3IsrBhHRReq1EVudS
        H8D37bRtRFYFmVJlqtbSgVjLglvg7sHPjujmFBHl4EGdAIVcxAwsSFogvZfJSU7IqiBTPpzOKcdiLQtu
        gDsimQq9eKQqytzsBMSlxac38L0gU02WiWnNlrVMlzexloV0gnuHqsdkWsnakVNR5rqmy9z//ve/tBo1
        Qs7xvSAjmlSWZQKxloV0Y/mNnQ5acEpORJkgIp0IadglguwNEGQGKFgVnJET9j0vyORjHnPMMRlvTynW
        spAO8BszpisVv7EdyYgyRgxDXukSSFMqEWRvgCDzHdIb25oaQ+dKGoV5XpDXrFmjypcvbx5lFrGWhVSh
        oVM6/MZ2WKJsV4lK1J4mXKTWsTUWQfYOvnZZMJ2CdoRusnjxYt1kR6xlIRm4VtPpN7aD7n52okylJUUo
        NNzi/YggewdfCzJ+lmx0vqLb3K233irWcsDBkiQPmEGjI0aMOKyIIxky5Te2I54oI8CMgsIviSCzy6Rs
        m77ayYxHEzKDrwW5RYsWaubMmeZR6tB7gS0fHwqTfykTtiPSWvba0EwhdSgD50agGpGcYRr7kLSfDJbf
        mFJzt4klyhQeUP1HVaV10Ac7b968umG+kF1Y+OlRHrn7ZqEk8MouywlZE2Qaq69du9Y8Sg1ad3IDEuHs
        2rWr9hd369ZNW8N2WNbyaaedpqdkCMFh3bp1elI1MIAWlwMN4pMBvzEDSrNFIveFuCyCR1YEme0kGRZ2
        PZCTgR6z9AzI6bRksZaDzY4dO7S1zO7JKZbfmIBwNrETZd4b3RLpIicEg6wIMv4vGrGkA1wVbNewilNB
        rOVgQTol/l/SHnFb4GtNNHHbwvIbp2sHlyqJLGXBWzAIgja2XHfMwsSFii/ZCTkWZCzJqVOn6uRnRgQl
        E4Emf7Jx48bmUWrwPpjmjCiT80eyPB9C9Mw+p4i1HAyY8nz55Zfr4C15oKSKObkpsuk3tkNE2fuwY0GH
        mM7TvXt3NWXKFB3Mw1gsWLCg1pTotrfR5EiQcVTTpa127drax8aFUr9+fceiTOSbsfnpgHaR3ECIMqOH
        uGCvvvpq7aN2OrIoGqxlBlg6sZaJ3vfq1UsvMLS1xHftFctKOAjfB9cIgeREZNtvbIeIsndBjAnoderU
        6VDsIhImv2MwopN2opwjQUawGEljwWwxygO5YJzQpk0bPQk5HezevVtHMUeOHGnOKLV69Wod4Ev1wrWs
        ZTrSRVvLfOgIPzcIo5HoycF0aAJHCDmz1vbs2WNeLWQb0izxI9vhFb+xHSLK3oQukxyx2q1a4EZDMxin
        Fo+0+JARo6JFi2ohdAJlnwwuTQcII4ENxt1bfPzxx7pcOtG4IidEWsvWnDn+T3YHfAGxVjuCln369NFW
        mYiy+5B2xG4JtwXw5yWXXGLrJvOa39iOsIkyOeBLliyJaXl6AYxCUhD37dtnzsRn27Zt2n0Rb9HPsSDz
        D3Lxzpo1SwssPjonWROsIMcee6w24dMFifJYPwRtEMO+ffvqsmzyNtNFpLVM2Srb2kRz53BlXHXVVeaR
        4Ba4zihz5jpjYcaHjIstnth61W9sBwZNGESZ35Mxb/hlk80jTxfc53gE8AnjG8b1EMnw4cO1f9gpzZs3
        1wZDLHIsyPRhZf4aVkWJEiX0mBon06Px62JNpxPyTLGAuPGKFCmi308mqvCwlumFmzt3brV+/XpzNj68
        Ppnx+0J6YVYjM+1oxmPXxMrLfmM7gi7KWMSIF0ZNqVKlXBHkaPElzzt//vw6K4yAHUNtMc4iYaZiMimV
        Vje4WKTssuBCR+0xw8ePH2/OxoduVvRxTTdYxhQDrFy5UgthpuCLwj/sFNwdAwcONI8Er0GGkNf9xnYE
        WZS51xBEYjOZEGQn4kvaZKK+NyQoJFOcQ8wpniakxYdMwIstIZZGIoYOHaozEfzKoEGDdO8ApxBsJL9Z
        8B7kw/vFb2xHEEUZdyOaMnv2bN0SIVVBthNfXBBOxTcWpP9eccUV5lFiqlWrpubNm2ceHU6OBJntOr5j
        y2fMYEeyLJ566in92A5E28nrvApVUZEBxESwlUnm9YI70I+bOMO4cePMGX8TJFFGPLE66SuMxiQryJkU
        31jwHvnsnQzboJq4ePHi+j3GIkeCTNSTIBqRRfy1/LIIrZM8ZD6caB+Mn+C9J9PHmbxDLoxss3fvXi0+
        +K7YAuLiCTPki3LDB4mgiDJuR/Rlzpw5eheD8YeIzZ079z/uyGjxrVGjhg7m0kohE+IbD1wQWPR2/w/Z
        GOXKldPTXuKRY5cFNzQfBKtXMq3/CHL5vVUgRSek4SSCVCp+3/vuu09t2LDBnHWfjRs36o5npAciRHQ+
        w43iJAgbRPAbly5d2rd+YzuCIMpU8uJKsjraFShQQB1xxBH6T8qQsy2+8eA9UaJPIDka3hdJEP379zdn
        YpMWH7JTWCEI/vkdBl2yM9i6das581+wSClYIQWPRHDymFkdH3jgAdfFGZcJedPWDubFF1/UJcU5LS/3
        M5bfmFz1oBIEUY60fFu2bKmOPvpo3ZDMK+IbD6xf3iNtUjt27Kg6dOighRgjbtKkSeZV8XFVkJcuXapX
        tSAwatQoLcpspyK3/+RZcyPg1iA/2oLzrJxuizPvjenekc2XSMMjs4BgRJgImt/YDkuU/TCEIVJ8aaMb
        bfmSBIABgX74Ae51FguyziZMmKCWL19unkmMq4JMrjJb5qBApJT6dQS2WbNmOl+SwAEjduz8xtHizAqa
        SXHmom7atOkhFwU7Fd7jsGHD9OOwEES/sR1eFGVLfGm6E0t8sXyJ03jN8nULVwWZLyCIvVu5wPB74QpY
        tWqVOesMN8SZYAi+bJrr9OjRQ3fEwyfHhIOwEGS/sR3ZFGUR3+RxVZCZByZz7OKTSXHGX0wkmH8PHzgu
        kxkzZphng00Y/MZ2uCHKicSX9E8R38S4KsiIjF0gTPiXTIozPi2sRTcHd2aLMPmN7XAqyrREoDEWGQOk
        SCKyiaDDoYhvenBNkInw58uXTwuNkByxxJmJBE7Fmc/eKuIhoEf6G81QwpD2Fja/sR12okzHxjJlyuj0
        SBZ+4gs9e/bUvWHq1q2rUyfjwYgsEd/04JogU2VDIElIDcSZ3O9kxJlydfI5sWBowEQnNKs1ZZAJq9/Y
        jliizExKhHfRokXmzL8cOHBAZxTRECydcQ0hNq4JMg2IgmKpsNVnW8ZWjWZJ2bI0nYoz/j2KVLCy/V6U
        45Sw+43tiBRlrmXaHiT6nEiRJPUsrMVEbuGaINOQhyobP8PFSNUd1ibNzpl8gtXJDL9sE0+cnfgAg4bl
        N3bSfTCsWKJMoN1pN0JeG7bcdbdxTZCbNGmiOzf5GbZ2hQoVOuyipLaeJHAvYYkzFXpYNWETZyqkWCyF
        g9cC/cKZDTlkyBC1adMm84zS5f9UwDmdakP6JH3HhczhmiBjSfrZB0XFG8UfDRo08OwomViETZxZLAlO
        ZbIntheJFl6CthdeeKHOfmDHRJMrrgFcORZ0J6OQySmMH0r3cAnhcFwRZCL8rMQECPwKvldydyPLof1G
        0MWZTICg+435DkkdtYSXkWKxhJeSXWbv2Y1KY2I6Y8mcQoYO/4eQOVwRZCZ5JJr463W4GLl4yVgIAtHi
        TPMTP4tz0PzGToSX0UFOhDcefGbEQ3bu3GnO2MN0+WSm5QjJ44og43v1+7BPy0JOZlqIXwiCOPvVb+yG
        8NpB06kBAwaYR/bQt4VmWkLmcEWQublpQ+ln8CEzcJGgRpCT4P0ozn7wG1vCu2DBgkPCS+9ct4Q3Hpab
        h//TDkaR4W+O7GwYDSl07CC5XiZPnuzY8hb+xRVBZmAgSfp+h+5ubPFoMs3oeGCcFU1Sgkgsccaa8pI4
        e81vbCe8fIaW8E6cONFV4bWDdrGkwNEci5z1SCiqoYTarv83MzWpiKToiHTQ9u3b67lxDEJIpvWk4JIg
        V6hQIekuaF6ECdtjxozRifRML+AG40IOw1RphAYBcVOcd+3apXtQ8PkOHz5crVmzxjxzkGz6jf0ovHbQ
        e6Jq1ap6VBJ9LDA6aK7OQAm6BJLBEQsEnN8TwV62bJk5exAaWm3evNk8EpyQdkHesmWLroPnC+VCZagf
        nf79lCqWCH4XSsE5wliWm2lxZqtLVSe7EfzCjE1n5FSxYsV0FzFrfJYbfuOgCW8iuF/Z8dHPAjcFqW52
        sEPhe+G1QuqkTZBJOG/UqJHePnbt2lX7kayqMVbZFStWmFcKQSLd4owY038CEWYrHAk7FALE7EpofJNO
        v3Gk8A4ePDjwwpsu6ANeuHBhLeSAK48R/mQl0XSI70xwTloEmT4JCC/N59lGRsIXMnPmTH0Tea2iTUgv
        ljgjXFhNljjjZ3cC218yWRBEO+jjnDt3bi0GyZJIeCn8sYSX8mInk9TDDAFVfMXkNAPBPNx5TKKn9oC4
        i+CclAWZFZELmeZBduBfouwYl4YQfHIizvPnz9cpX3ZYfmNGUnXp0sWc/S8ivO5A2052xdHBOz57/Mp+
        b5fgNikLMpNUGaLpBLaZHEK4cCrODRs21BMn7MBv3LZtW50XTlQ/0odPab4Ir7sQtCtZsqTOz4/M0BBB
        zhkpCzKRWaejYbCOsZLtchmFYBNLnInwQ6lSpXR/hXhE5xvja45snE4ASoTXfejiSJyITBhrEMLatWu1
        G1MEOTlSFmS+iH379plHiSFlLAzN0YXEWOJsRfKxtOzSpAgcRVrVlON7ISd69erVauHChYHKJEoG2tLS
        H5x7m50JljGZVdWrV/dUzrofSFmQSU1KRpCJyIogC7GgT4JTi4oMDIJH2a6aZEHhmmaqN2mQYQbrmGo9
        /MlkWgjJk7Ig469jMKIT+JIQcD93fRMyB9kTzG9zAiW6rVu3No+yAxYx5fQtW7bUZcVhF2QhdVIW5LFj
        x+qItxNoXUkVkCDEgoUavzK+YjtIs2QG3MqVK82Z7EAAsmbNmjqGQr9vEWQhVVIWZKwEtmwk7NvBxUpA
        L3JigSBEQ5COJuijR4+OGfyltwbBokRplpmG3V6VKlV0LjQLgwiykA5SFmQgooooYy3HuonIBaUwhD8F
        IRGIcq1atbQwU7HH1ONBgwZpASTwR1/ebEJ6V+/evXXZNn5TEWQhXaRFkIFuW7Vr19ZVOz169NBR1379
        +uk0pYoVKzr2MwuCBYMNGCpLz17y1ykcie5Glg0QYDI86I5G1ge7Q5ryEJCUdDshFdImyBZcoIzHR5Rp
        MBTdAUoQ/M6cOXO0D5sKNQ4C1Xny5NEpoBRKCUJOSbsgC0LYEJeFkC5cEWRyE7EqOBYtWqT2799vnhHC
        inVNEBTj4Gc6hPkR+v7iwqBARBBSIeOCTNCD3FL6CjBFAF8b2z0J8IUX65ogW4JqLg76HEuZrRB2Mi7I
        dIOrU6fOoZl63IytWrVS9erV0z8L4cO6JoI4MFYQUsF1QYY+ffpoiyiM0zYEEWRBiIdrgty5c2cd9Jg+
        fbpOhZORL+HFuiY4GKDJwbRlzgtCmHFNkCkMKVu2rPYb0hWK+WR0iRLCh3VNVKpUSbVr104f9EeWHZMQ
        drLisqDSijJqCeyFE+uaEJeFIBxOVgSZ4YfkbY4YMcKcEcKECLIgxMY1Qe7Vq5fuYbt9+3ZdyUeFkww9
        DSfWNcHUEK4JDvoayyQZIexkXJDxEzdu3FjlypVLH0cddZSqXLmymjZtmif6EgjuE31NWEeiadOCEHQy
        LsiCIAiCM0SQBUEQPIIIsiAIgkcQQRYEQfAIIsiCIAgeQQRZEATBI4ggC4IgeAQRZEEQBE+g1P8B8qMG
        2ohTNAMAAAAASUVORK5CYII=
</value>
  </data>
</root>